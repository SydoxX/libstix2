package vulnerability_prevalence

import (
	"time"

	"github.com/avast/libstix2/datatypes/timestamp"

	"github.com/avast/libstix2/vocabs"

	"github.com/avast/libstix2/datatypes/stixid"

	"github.com/avast/libstix2/objects/avast"
	"github.com/google/uuid"

	"github.com/avast/libstix2/objects/extensions/definition"
)

const (
	Name                      = "Vulnerability Prevalence Extension"
	PropVulnerabilityRef      = "x_avast_com_vulnerability_ref"
	PropRegionalPrevalenceMap = "x_avast_com_regional_prevalence_map"
)

var (
	UUID = uuid.NewSHA1(avast.Namespace, []byte(Name))
	Id   = stixid.BuildId("extension-definition", UUID)
)

func ExtensionDefinition() *definition.Definition {
	created, err := time.Parse(time.RFC3339, "2021-04-14T10:18:00+01:00")
	if err != nil {
		panic(err)
	}

	def := definition.New()
	def.ID = Id
	def.CreatedByRef = avast.IdentityId
	def.Name = Name
	def.Description = "A vulnerability prevalence object defines how prevalent a vulnerability is occurring across both geographic and malware instances."
	def.Version = "1.0"
	def.Created = timestamp.NewPtr(created)
	def.Modified = timestamp.NewPtr(created)
	def.Schema = "TODO" // TODO
	def.ExtensionTypes = append(def.ExtensionTypes, vocabs.ExtensionProperty)
	return def
}

type VulnerabilityPrevalence struct {
	ExtensionType         vocabs.ExtensionType `json:"extension_type"`
	VulnerabilityRef      string               `json:"x_avast_com_vulnerability_ref,omitempty"`
	RegionalPrevalenceMap map[string]int64     `json:"x_avast_com_regional_prevalence_map,omitempty"`
}

func New(vulnerabilityRef string) *VulnerabilityPrevalence {
	return &VulnerabilityPrevalence{
		ExtensionType:         vocabs.ExtensionProperty,
		VulnerabilityRef:      vulnerabilityRef,
		RegionalPrevalenceMap: make(map[string]int64),
	}
}
