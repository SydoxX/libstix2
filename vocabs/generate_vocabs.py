#!/usr/bin/env python3

import json
import sys
import subprocess
import tempfile

PACKAGE = "vocabs"

VOCAB_SUFFIX = "-ov"
ENUM_SUFFIX = "-enum"

def capitalize(val):
    return val[0].upper() + val[1:]

def camelize(val):
    val = val.translate({
        ord("+"): "p",
        ord("#"): "sharp",
        ord(":"): "-",
        ord("/"): "-",
    })
    return [ capitalize(p) for p in val.split("-") ]

def format_content(content):
    with tempfile.NamedTemporaryFile() as f:
        f.write(content.encode("utf-8"))
        f.flush()
        try:
            return subprocess.check_output([ "gofmt", "-s", f.name ]).decode("utf-8")
        except:
            print(content)
            raise

def process_vocab(name, vocab_def):
    name_parts = camelize(name)

    type_name = "".join(name_parts)
    file_name = f"{type_name.lower()}.gen.go"
    val_prefix = "".join(name_parts[:-1]) if len(name_parts) > 1 else type_name

    if type_name == "MalwareResult":
        val_prefix = type_name

    print(name, type_name, val_prefix)

    enum_values = []
    for val in vocab_def["oneOf"]:
        entry_name = val_prefix + ''.join(camelize(val))
        if entry_name == type_name:
            entry_name += ''.join(camelize(val))
        enum_values.append(f"\t{entry_name} {type_name} = \"{val}\"")


    enum_values_joined = '\n'.join(enum_values)
    file_content = f"""// THIS FILE IS AUTOGENERATED BY generate_vocabs.py

package {PACKAGE}

type {type_name} string

const (
{enum_values_joined}
)
    """

    file_content = format_content(file_content)

    with open(file_name, "wb") as f:
        f.write(file_content.encode("utf-8"))



if __name__ == "__main__":
    with open("stix21_registry.json", "rb") as f:
        registry = json.load(f)

    for name, artifact in registry.items():
        if artifact["type"] != "string" or "oneOf" not in artifact:
            continue

        if name.endswith(VOCAB_SUFFIX):
            process_vocab(name[:-len(VOCAB_SUFFIX)], artifact)
        elif name.endswith(ENUM_SUFFIX):
            process_vocab(name[:-len(ENUM_SUFFIX)], artifact)
